# This workflow will build and push a .NET Core app to an Azure Web App when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/en-us/azure/app-service/quickstart-dotnetcore?tabs=net60&pivots=development-environment-vscode
#
# To configure this workflow:
#
# 1. Download the Publish Profile for your Azure Web App. You can download this file from the Overview page of your Web App in the Azure Portal.
#    For more information: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
# 2. Create a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE, paste the publish profile contents as the value of the secret.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Change the value for the AZURE_WEBAPP_NAME. Optionally, change the AZURE_WEBAPP_PACKAGE_PATH and DOTNET_VERSION environment variables below.
#
# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions
# For more information on the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-sample

env:
  DOTNET_VERSION: '7'                 # set this to the .NET Core version to use

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          
      - name: Get version
        id: get_version
        uses: greenygh0st/net-proj-release-version@v1
        with:
          
          # Filepath of the *.csproj file, relative to root of repository
          PROJ_FILE: ${{env.DOTNET_ROOT}}/src/PuppetMaster.WebApi/PuppetMaster.WebApi.csproj

      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: dotnet publish
        run: dotnet publish -c Release

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/Releases
      - name: Create Release
        # You may pin to the exact commit or the version.
        # uses: ncipollo/release-action@a2e71bdd4e7dab70ca26a852f29600c98b33153e
        uses: ncipollo/release-action@v1.12.0
        with:
          # An optional set of paths representing artifacts to upload to the release. This may be a single path or a comma delimited list of paths (or globs)
          artifact: ${{env.DOTNET_ROOT}}/Releases
          name: "Version ${{ steps.get_version.outputs.RELEASE_VERSION }}" # optional, default is 
          # An optional tag for the release. If this is omitted the git ref will be used (if it is a tag).
          tag: "${{ steps.get_version.outputs.RELEASE_VERSION }}"
